services:

  db:
    container_name: ${DB_HOST}
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    ports:
      - ${DB_PORT}:3306  # UNA VEZ FINALIZADO EL PROYECTO, COMENTAR ESTA LINEA PARA DEJAR DE MAPEAR EL PUERTO Y AUMENTAR LA SEGURIDAD
    volumes:
      - ./database/scripts:/docker-entrypoint-initdb.d:ro
      - ./database/conf/mycustom.cnf:/etc/mysql/conf.d/custom.cnf:ro
      - /var/lib/mysql
  
  mongo:
    container_name: ${MONGO_HOST}
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - ${MONGO_PORT}:27017 # Comentar en producci√≥n para mayor seguridad
    volumes:
      - ./database/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - /data/db

  backend:
    build: .
    container_name: ${APP_HOST}
    restart: unless-stopped
    ports: 
      - ${APP_PORT}:3000
    depends_on:
      - db
    volumes:
      - .:/app
      - /app/node_modules